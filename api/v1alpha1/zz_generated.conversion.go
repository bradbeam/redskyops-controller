// +build !ignore_autogenerated

/*
Copyright 2020 GramLabs, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	hub "github.com/redskyops/redskyops-controller/internal/hub"
	v1 "k8s.io/api/core/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	types "k8s.io/apimachinery/pkg/types"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Assignment)(nil), (*hub.Assignment)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Assignment_To_hub_Assignment(a.(*Assignment), b.(*hub.Assignment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.Assignment)(nil), (*Assignment)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_Assignment_To_v1alpha1_Assignment(a.(*hub.Assignment), b.(*Assignment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigMapHelmValuesFromSource)(nil), (*hub.ConfigMapHelmValuesFromSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ConfigMapHelmValuesFromSource_To_hub_ConfigMapHelmValuesFromSource(a.(*ConfigMapHelmValuesFromSource), b.(*hub.ConfigMapHelmValuesFromSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.ConfigMapHelmValuesFromSource)(nil), (*ConfigMapHelmValuesFromSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_ConfigMapHelmValuesFromSource_To_v1alpha1_ConfigMapHelmValuesFromSource(a.(*hub.ConfigMapHelmValuesFromSource), b.(*ConfigMapHelmValuesFromSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Constraint)(nil), (*hub.Constraint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Constraint_To_hub_Constraint(a.(*Constraint), b.(*hub.Constraint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.Constraint)(nil), (*Constraint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_Constraint_To_v1alpha1_Constraint(a.(*hub.Constraint), b.(*Constraint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Experiment)(nil), (*hub.Experiment)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Experiment_To_hub_Experiment(a.(*Experiment), b.(*hub.Experiment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.Experiment)(nil), (*Experiment)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_Experiment_To_v1alpha1_Experiment(a.(*hub.Experiment), b.(*Experiment), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExperimentList)(nil), (*hub.ExperimentList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExperimentList_To_hub_ExperimentList(a.(*ExperimentList), b.(*hub.ExperimentList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.ExperimentList)(nil), (*ExperimentList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_ExperimentList_To_v1alpha1_ExperimentList(a.(*hub.ExperimentList), b.(*ExperimentList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExperimentSpec)(nil), (*hub.ExperimentSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExperimentSpec_To_hub_ExperimentSpec(a.(*ExperimentSpec), b.(*hub.ExperimentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.ExperimentSpec)(nil), (*ExperimentSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_ExperimentSpec_To_v1alpha1_ExperimentSpec(a.(*hub.ExperimentSpec), b.(*ExperimentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExperimentStatus)(nil), (*hub.ExperimentStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExperimentStatus_To_hub_ExperimentStatus(a.(*ExperimentStatus), b.(*hub.ExperimentStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.ExperimentStatus)(nil), (*ExperimentStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_ExperimentStatus_To_v1alpha1_ExperimentStatus(a.(*hub.ExperimentStatus), b.(*ExperimentStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HelmValue)(nil), (*hub.HelmValue)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_HelmValue_To_hub_HelmValue(a.(*HelmValue), b.(*hub.HelmValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.HelmValue)(nil), (*HelmValue)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_HelmValue_To_v1alpha1_HelmValue(a.(*hub.HelmValue), b.(*HelmValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HelmValueSource)(nil), (*hub.HelmValueSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_HelmValueSource_To_hub_HelmValueSource(a.(*HelmValueSource), b.(*hub.HelmValueSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.HelmValueSource)(nil), (*HelmValueSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_HelmValueSource_To_v1alpha1_HelmValueSource(a.(*hub.HelmValueSource), b.(*HelmValueSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HelmValuesFromSource)(nil), (*hub.HelmValuesFromSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_HelmValuesFromSource_To_hub_HelmValuesFromSource(a.(*HelmValuesFromSource), b.(*hub.HelmValuesFromSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.HelmValuesFromSource)(nil), (*HelmValuesFromSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_HelmValuesFromSource_To_v1alpha1_HelmValuesFromSource(a.(*hub.HelmValuesFromSource), b.(*HelmValuesFromSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Metric)(nil), (*hub.Metric)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Metric_To_hub_Metric(a.(*Metric), b.(*hub.Metric), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.Metric)(nil), (*Metric)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_Metric_To_v1alpha1_Metric(a.(*hub.Metric), b.(*Metric), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NamespaceTemplateSpec)(nil), (*hub.NamespaceTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NamespaceTemplateSpec_To_hub_NamespaceTemplateSpec(a.(*NamespaceTemplateSpec), b.(*hub.NamespaceTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.NamespaceTemplateSpec)(nil), (*NamespaceTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_NamespaceTemplateSpec_To_v1alpha1_NamespaceTemplateSpec(a.(*hub.NamespaceTemplateSpec), b.(*NamespaceTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Optimization)(nil), (*hub.Optimization)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Optimization_To_hub_Optimization(a.(*Optimization), b.(*hub.Optimization), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.Optimization)(nil), (*Optimization)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_Optimization_To_v1alpha1_Optimization(a.(*hub.Optimization), b.(*Optimization), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OrderConstraint)(nil), (*hub.OrderConstraint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_OrderConstraint_To_hub_OrderConstraint(a.(*OrderConstraint), b.(*hub.OrderConstraint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.OrderConstraint)(nil), (*OrderConstraint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_OrderConstraint_To_v1alpha1_OrderConstraint(a.(*hub.OrderConstraint), b.(*OrderConstraint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Parameter)(nil), (*hub.Parameter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Parameter_To_hub_Parameter(a.(*Parameter), b.(*hub.Parameter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.Parameter)(nil), (*Parameter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_Parameter_To_v1alpha1_Parameter(a.(*hub.Parameter), b.(*Parameter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ParameterSelector)(nil), (*hub.ParameterSelector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ParameterSelector_To_hub_ParameterSelector(a.(*ParameterSelector), b.(*hub.ParameterSelector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.ParameterSelector)(nil), (*ParameterSelector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_ParameterSelector_To_v1alpha1_ParameterSelector(a.(*hub.ParameterSelector), b.(*ParameterSelector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PatchOperation)(nil), (*hub.PatchOperation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PatchOperation_To_hub_PatchOperation(a.(*PatchOperation), b.(*hub.PatchOperation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.PatchOperation)(nil), (*PatchOperation)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_PatchOperation_To_v1alpha1_PatchOperation(a.(*hub.PatchOperation), b.(*PatchOperation), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PatchReadinessGate)(nil), (*hub.PatchReadinessGate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PatchReadinessGate_To_hub_PatchReadinessGate(a.(*PatchReadinessGate), b.(*hub.PatchReadinessGate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.PatchReadinessGate)(nil), (*PatchReadinessGate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_PatchReadinessGate_To_v1alpha1_PatchReadinessGate(a.(*hub.PatchReadinessGate), b.(*PatchReadinessGate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PatchTemplate)(nil), (*hub.PatchTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PatchTemplate_To_hub_PatchTemplate(a.(*PatchTemplate), b.(*hub.PatchTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.PatchTemplate)(nil), (*PatchTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_PatchTemplate_To_v1alpha1_PatchTemplate(a.(*hub.PatchTemplate), b.(*PatchTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ReadinessCheck)(nil), (*hub.ReadinessCheck)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ReadinessCheck_To_hub_ReadinessCheck(a.(*ReadinessCheck), b.(*hub.ReadinessCheck), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.ReadinessCheck)(nil), (*ReadinessCheck)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_ReadinessCheck_To_v1alpha1_ReadinessCheck(a.(*hub.ReadinessCheck), b.(*ReadinessCheck), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SetupTask)(nil), (*hub.SetupTask)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SetupTask_To_hub_SetupTask(a.(*SetupTask), b.(*hub.SetupTask), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.SetupTask)(nil), (*SetupTask)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_SetupTask_To_v1alpha1_SetupTask(a.(*hub.SetupTask), b.(*SetupTask), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SumConstraint)(nil), (*hub.SumConstraint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SumConstraint_To_hub_SumConstraint(a.(*SumConstraint), b.(*hub.SumConstraint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.SumConstraint)(nil), (*SumConstraint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_SumConstraint_To_v1alpha1_SumConstraint(a.(*hub.SumConstraint), b.(*SumConstraint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SumConstraintParameter)(nil), (*hub.SumConstraintParameter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SumConstraintParameter_To_hub_SumConstraintParameter(a.(*SumConstraintParameter), b.(*hub.SumConstraintParameter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.SumConstraintParameter)(nil), (*SumConstraintParameter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_SumConstraintParameter_To_v1alpha1_SumConstraintParameter(a.(*hub.SumConstraintParameter), b.(*SumConstraintParameter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Trial)(nil), (*hub.Trial)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Trial_To_hub_Trial(a.(*Trial), b.(*hub.Trial), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.Trial)(nil), (*Trial)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_Trial_To_v1alpha1_Trial(a.(*hub.Trial), b.(*Trial), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TrialCondition)(nil), (*hub.TrialCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_TrialCondition_To_hub_TrialCondition(a.(*TrialCondition), b.(*hub.TrialCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.TrialCondition)(nil), (*TrialCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_TrialCondition_To_v1alpha1_TrialCondition(a.(*hub.TrialCondition), b.(*TrialCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TrialList)(nil), (*hub.TrialList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_TrialList_To_hub_TrialList(a.(*TrialList), b.(*hub.TrialList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.TrialList)(nil), (*TrialList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_TrialList_To_v1alpha1_TrialList(a.(*hub.TrialList), b.(*TrialList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TrialReadinessGate)(nil), (*hub.TrialReadinessGate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_TrialReadinessGate_To_hub_TrialReadinessGate(a.(*TrialReadinessGate), b.(*hub.TrialReadinessGate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.TrialReadinessGate)(nil), (*TrialReadinessGate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_TrialReadinessGate_To_v1alpha1_TrialReadinessGate(a.(*hub.TrialReadinessGate), b.(*TrialReadinessGate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TrialSpec)(nil), (*hub.TrialSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_TrialSpec_To_hub_TrialSpec(a.(*TrialSpec), b.(*hub.TrialSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.TrialSpec)(nil), (*TrialSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_TrialSpec_To_v1alpha1_TrialSpec(a.(*hub.TrialSpec), b.(*TrialSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TrialStatus)(nil), (*hub.TrialStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_TrialStatus_To_hub_TrialStatus(a.(*TrialStatus), b.(*hub.TrialStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.TrialStatus)(nil), (*TrialStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_TrialStatus_To_v1alpha1_TrialStatus(a.(*hub.TrialStatus), b.(*TrialStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TrialTemplateSpec)(nil), (*hub.TrialTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_TrialTemplateSpec_To_hub_TrialTemplateSpec(a.(*TrialTemplateSpec), b.(*hub.TrialTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.TrialTemplateSpec)(nil), (*TrialTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_TrialTemplateSpec_To_v1alpha1_TrialTemplateSpec(a.(*hub.TrialTemplateSpec), b.(*TrialTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Value)(nil), (*hub.Value)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Value_To_hub_Value(a.(*Value), b.(*hub.Value), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hub.Value)(nil), (*Value)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hub_Value_To_v1alpha1_Value(a.(*hub.Value), b.(*Value), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Assignment_To_hub_Assignment(in *Assignment, out *hub.Assignment, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_v1alpha1_Assignment_To_hub_Assignment is an autogenerated conversion function.
func Convert_v1alpha1_Assignment_To_hub_Assignment(in *Assignment, out *hub.Assignment, s conversion.Scope) error {
	return autoConvert_v1alpha1_Assignment_To_hub_Assignment(in, out, s)
}

func autoConvert_hub_Assignment_To_v1alpha1_Assignment(in *hub.Assignment, out *Assignment, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_hub_Assignment_To_v1alpha1_Assignment is an autogenerated conversion function.
func Convert_hub_Assignment_To_v1alpha1_Assignment(in *hub.Assignment, out *Assignment, s conversion.Scope) error {
	return autoConvert_hub_Assignment_To_v1alpha1_Assignment(in, out, s)
}

func autoConvert_v1alpha1_ConfigMapHelmValuesFromSource_To_hub_ConfigMapHelmValuesFromSource(in *ConfigMapHelmValuesFromSource, out *hub.ConfigMapHelmValuesFromSource, s conversion.Scope) error {
	out.LocalObjectReference = in.LocalObjectReference
	return nil
}

// Convert_v1alpha1_ConfigMapHelmValuesFromSource_To_hub_ConfigMapHelmValuesFromSource is an autogenerated conversion function.
func Convert_v1alpha1_ConfigMapHelmValuesFromSource_To_hub_ConfigMapHelmValuesFromSource(in *ConfigMapHelmValuesFromSource, out *hub.ConfigMapHelmValuesFromSource, s conversion.Scope) error {
	return autoConvert_v1alpha1_ConfigMapHelmValuesFromSource_To_hub_ConfigMapHelmValuesFromSource(in, out, s)
}

func autoConvert_hub_ConfigMapHelmValuesFromSource_To_v1alpha1_ConfigMapHelmValuesFromSource(in *hub.ConfigMapHelmValuesFromSource, out *ConfigMapHelmValuesFromSource, s conversion.Scope) error {
	out.LocalObjectReference = in.LocalObjectReference
	return nil
}

// Convert_hub_ConfigMapHelmValuesFromSource_To_v1alpha1_ConfigMapHelmValuesFromSource is an autogenerated conversion function.
func Convert_hub_ConfigMapHelmValuesFromSource_To_v1alpha1_ConfigMapHelmValuesFromSource(in *hub.ConfigMapHelmValuesFromSource, out *ConfigMapHelmValuesFromSource, s conversion.Scope) error {
	return autoConvert_hub_ConfigMapHelmValuesFromSource_To_v1alpha1_ConfigMapHelmValuesFromSource(in, out, s)
}

func autoConvert_v1alpha1_Constraint_To_hub_Constraint(in *Constraint, out *hub.Constraint, s conversion.Scope) error {
	out.Name = in.Name
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(hub.OrderConstraint)
		if err := Convert_v1alpha1_OrderConstraint_To_hub_OrderConstraint(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Order = nil
	}
	if in.Sum != nil {
		in, out := &in.Sum, &out.Sum
		*out = new(hub.SumConstraint)
		if err := Convert_v1alpha1_SumConstraint_To_hub_SumConstraint(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Sum = nil
	}
	return nil
}

// Convert_v1alpha1_Constraint_To_hub_Constraint is an autogenerated conversion function.
func Convert_v1alpha1_Constraint_To_hub_Constraint(in *Constraint, out *hub.Constraint, s conversion.Scope) error {
	return autoConvert_v1alpha1_Constraint_To_hub_Constraint(in, out, s)
}

func autoConvert_hub_Constraint_To_v1alpha1_Constraint(in *hub.Constraint, out *Constraint, s conversion.Scope) error {
	out.Name = in.Name
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(OrderConstraint)
		if err := Convert_hub_OrderConstraint_To_v1alpha1_OrderConstraint(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Order = nil
	}
	if in.Sum != nil {
		in, out := &in.Sum, &out.Sum
		*out = new(SumConstraint)
		if err := Convert_hub_SumConstraint_To_v1alpha1_SumConstraint(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Sum = nil
	}
	return nil
}

// Convert_hub_Constraint_To_v1alpha1_Constraint is an autogenerated conversion function.
func Convert_hub_Constraint_To_v1alpha1_Constraint(in *hub.Constraint, out *Constraint, s conversion.Scope) error {
	return autoConvert_hub_Constraint_To_v1alpha1_Constraint(in, out, s)
}

func autoConvert_v1alpha1_Experiment_To_hub_Experiment(in *Experiment, out *hub.Experiment, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ExperimentSpec_To_hub_ExperimentSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ExperimentStatus_To_hub_ExperimentStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Experiment_To_hub_Experiment is an autogenerated conversion function.
func Convert_v1alpha1_Experiment_To_hub_Experiment(in *Experiment, out *hub.Experiment, s conversion.Scope) error {
	return autoConvert_v1alpha1_Experiment_To_hub_Experiment(in, out, s)
}

func autoConvert_hub_Experiment_To_v1alpha1_Experiment(in *hub.Experiment, out *Experiment, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_hub_ExperimentSpec_To_v1alpha1_ExperimentSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_hub_ExperimentStatus_To_v1alpha1_ExperimentStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_hub_Experiment_To_v1alpha1_Experiment is an autogenerated conversion function.
func Convert_hub_Experiment_To_v1alpha1_Experiment(in *hub.Experiment, out *Experiment, s conversion.Scope) error {
	return autoConvert_hub_Experiment_To_v1alpha1_Experiment(in, out, s)
}

func autoConvert_v1alpha1_ExperimentList_To_hub_ExperimentList(in *ExperimentList, out *hub.ExperimentList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]hub.Experiment, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Experiment_To_hub_Experiment(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ExperimentList_To_hub_ExperimentList is an autogenerated conversion function.
func Convert_v1alpha1_ExperimentList_To_hub_ExperimentList(in *ExperimentList, out *hub.ExperimentList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ExperimentList_To_hub_ExperimentList(in, out, s)
}

func autoConvert_hub_ExperimentList_To_v1alpha1_ExperimentList(in *hub.ExperimentList, out *ExperimentList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Experiment, len(*in))
		for i := range *in {
			if err := Convert_hub_Experiment_To_v1alpha1_Experiment(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_hub_ExperimentList_To_v1alpha1_ExperimentList is an autogenerated conversion function.
func Convert_hub_ExperimentList_To_v1alpha1_ExperimentList(in *hub.ExperimentList, out *ExperimentList, s conversion.Scope) error {
	return autoConvert_hub_ExperimentList_To_v1alpha1_ExperimentList(in, out, s)
}

func autoConvert_v1alpha1_ExperimentSpec_To_hub_ExperimentSpec(in *ExperimentSpec, out *hub.ExperimentSpec, s conversion.Scope) error {
	out.Replicas = in.Replicas
	if in.Optimization != nil {
		in, out := &in.Optimization, &out.Optimization
		*out = make([]hub.Optimization, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Optimization_To_hub_Optimization(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Optimization = nil
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]hub.Parameter, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Parameter_To_hub_Parameter(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Parameters = nil
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]hub.Constraint, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Constraint_To_hub_Constraint(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Constraints = nil
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]hub.Metric, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Metric_To_hub_Metric(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Metrics = nil
	}
	if in.Patches != nil {
		in, out := &in.Patches, &out.Patches
		*out = make([]hub.PatchTemplate, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_PatchTemplate_To_hub_PatchTemplate(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Patches = nil
	}
	out.NamespaceSelector = in.NamespaceSelector
	if in.NamespaceTemplate != nil {
		in, out := &in.NamespaceTemplate, &out.NamespaceTemplate
		*out = new(hub.NamespaceTemplateSpec)
		if err := Convert_v1alpha1_NamespaceTemplateSpec_To_hub_NamespaceTemplateSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NamespaceTemplate = nil
	}
	out.Selector = in.Selector
	if err := Convert_v1alpha1_TrialTemplateSpec_To_hub_TrialTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ExperimentSpec_To_hub_ExperimentSpec is an autogenerated conversion function.
func Convert_v1alpha1_ExperimentSpec_To_hub_ExperimentSpec(in *ExperimentSpec, out *hub.ExperimentSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ExperimentSpec_To_hub_ExperimentSpec(in, out, s)
}

func autoConvert_hub_ExperimentSpec_To_v1alpha1_ExperimentSpec(in *hub.ExperimentSpec, out *ExperimentSpec, s conversion.Scope) error {
	out.Replicas = in.Replicas
	if in.Optimization != nil {
		in, out := &in.Optimization, &out.Optimization
		*out = make([]Optimization, len(*in))
		for i := range *in {
			if err := Convert_hub_Optimization_To_v1alpha1_Optimization(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Optimization = nil
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]Parameter, len(*in))
		for i := range *in {
			if err := Convert_hub_Parameter_To_v1alpha1_Parameter(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Parameters = nil
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = make([]Constraint, len(*in))
		for i := range *in {
			if err := Convert_hub_Constraint_To_v1alpha1_Constraint(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Constraints = nil
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]Metric, len(*in))
		for i := range *in {
			if err := Convert_hub_Metric_To_v1alpha1_Metric(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Metrics = nil
	}
	if in.Patches != nil {
		in, out := &in.Patches, &out.Patches
		*out = make([]PatchTemplate, len(*in))
		for i := range *in {
			if err := Convert_hub_PatchTemplate_To_v1alpha1_PatchTemplate(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Patches = nil
	}
	out.NamespaceSelector = in.NamespaceSelector
	if in.NamespaceTemplate != nil {
		in, out := &in.NamespaceTemplate, &out.NamespaceTemplate
		*out = new(NamespaceTemplateSpec)
		if err := Convert_hub_NamespaceTemplateSpec_To_v1alpha1_NamespaceTemplateSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.NamespaceTemplate = nil
	}
	out.Selector = in.Selector
	if err := Convert_hub_TrialTemplateSpec_To_v1alpha1_TrialTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	return nil
}

// Convert_hub_ExperimentSpec_To_v1alpha1_ExperimentSpec is an autogenerated conversion function.
func Convert_hub_ExperimentSpec_To_v1alpha1_ExperimentSpec(in *hub.ExperimentSpec, out *ExperimentSpec, s conversion.Scope) error {
	return autoConvert_hub_ExperimentSpec_To_v1alpha1_ExperimentSpec(in, out, s)
}

func autoConvert_v1alpha1_ExperimentStatus_To_hub_ExperimentStatus(in *ExperimentStatus, out *hub.ExperimentStatus, s conversion.Scope) error {
	out.Phase = in.Phase
	out.ActiveTrials = in.ActiveTrials
	return nil
}

// Convert_v1alpha1_ExperimentStatus_To_hub_ExperimentStatus is an autogenerated conversion function.
func Convert_v1alpha1_ExperimentStatus_To_hub_ExperimentStatus(in *ExperimentStatus, out *hub.ExperimentStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ExperimentStatus_To_hub_ExperimentStatus(in, out, s)
}

func autoConvert_hub_ExperimentStatus_To_v1alpha1_ExperimentStatus(in *hub.ExperimentStatus, out *ExperimentStatus, s conversion.Scope) error {
	out.Phase = in.Phase
	out.ActiveTrials = in.ActiveTrials
	return nil
}

// Convert_hub_ExperimentStatus_To_v1alpha1_ExperimentStatus is an autogenerated conversion function.
func Convert_hub_ExperimentStatus_To_v1alpha1_ExperimentStatus(in *hub.ExperimentStatus, out *ExperimentStatus, s conversion.Scope) error {
	return autoConvert_hub_ExperimentStatus_To_v1alpha1_ExperimentStatus(in, out, s)
}

func autoConvert_v1alpha1_HelmValue_To_hub_HelmValue(in *HelmValue, out *hub.HelmValue, s conversion.Scope) error {
	out.Name = in.Name
	out.ForceString = in.ForceString
	out.Value = in.Value
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(hub.HelmValueSource)
		if err := Convert_v1alpha1_HelmValueSource_To_hub_HelmValueSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ValueFrom = nil
	}
	return nil
}

// Convert_v1alpha1_HelmValue_To_hub_HelmValue is an autogenerated conversion function.
func Convert_v1alpha1_HelmValue_To_hub_HelmValue(in *HelmValue, out *hub.HelmValue, s conversion.Scope) error {
	return autoConvert_v1alpha1_HelmValue_To_hub_HelmValue(in, out, s)
}

func autoConvert_hub_HelmValue_To_v1alpha1_HelmValue(in *hub.HelmValue, out *HelmValue, s conversion.Scope) error {
	out.Name = in.Name
	out.ForceString = in.ForceString
	out.Value = in.Value
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(HelmValueSource)
		if err := Convert_hub_HelmValueSource_To_v1alpha1_HelmValueSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ValueFrom = nil
	}
	return nil
}

// Convert_hub_HelmValue_To_v1alpha1_HelmValue is an autogenerated conversion function.
func Convert_hub_HelmValue_To_v1alpha1_HelmValue(in *hub.HelmValue, out *HelmValue, s conversion.Scope) error {
	return autoConvert_hub_HelmValue_To_v1alpha1_HelmValue(in, out, s)
}

func autoConvert_v1alpha1_HelmValueSource_To_hub_HelmValueSource(in *HelmValueSource, out *hub.HelmValueSource, s conversion.Scope) error {
	if in.ParameterRef != nil {
		in, out := &in.ParameterRef, &out.ParameterRef
		*out = new(hub.ParameterSelector)
		if err := Convert_v1alpha1_ParameterSelector_To_hub_ParameterSelector(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ParameterRef = nil
	}
	return nil
}

// Convert_v1alpha1_HelmValueSource_To_hub_HelmValueSource is an autogenerated conversion function.
func Convert_v1alpha1_HelmValueSource_To_hub_HelmValueSource(in *HelmValueSource, out *hub.HelmValueSource, s conversion.Scope) error {
	return autoConvert_v1alpha1_HelmValueSource_To_hub_HelmValueSource(in, out, s)
}

func autoConvert_hub_HelmValueSource_To_v1alpha1_HelmValueSource(in *hub.HelmValueSource, out *HelmValueSource, s conversion.Scope) error {
	if in.ParameterRef != nil {
		in, out := &in.ParameterRef, &out.ParameterRef
		*out = new(ParameterSelector)
		if err := Convert_hub_ParameterSelector_To_v1alpha1_ParameterSelector(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ParameterRef = nil
	}
	return nil
}

// Convert_hub_HelmValueSource_To_v1alpha1_HelmValueSource is an autogenerated conversion function.
func Convert_hub_HelmValueSource_To_v1alpha1_HelmValueSource(in *hub.HelmValueSource, out *HelmValueSource, s conversion.Scope) error {
	return autoConvert_hub_HelmValueSource_To_v1alpha1_HelmValueSource(in, out, s)
}

func autoConvert_v1alpha1_HelmValuesFromSource_To_hub_HelmValuesFromSource(in *HelmValuesFromSource, out *hub.HelmValuesFromSource, s conversion.Scope) error {
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(hub.ConfigMapHelmValuesFromSource)
		if err := Convert_v1alpha1_ConfigMapHelmValuesFromSource_To_hub_ConfigMapHelmValuesFromSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ConfigMap = nil
	}
	return nil
}

// Convert_v1alpha1_HelmValuesFromSource_To_hub_HelmValuesFromSource is an autogenerated conversion function.
func Convert_v1alpha1_HelmValuesFromSource_To_hub_HelmValuesFromSource(in *HelmValuesFromSource, out *hub.HelmValuesFromSource, s conversion.Scope) error {
	return autoConvert_v1alpha1_HelmValuesFromSource_To_hub_HelmValuesFromSource(in, out, s)
}

func autoConvert_hub_HelmValuesFromSource_To_v1alpha1_HelmValuesFromSource(in *hub.HelmValuesFromSource, out *HelmValuesFromSource, s conversion.Scope) error {
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(ConfigMapHelmValuesFromSource)
		if err := Convert_hub_ConfigMapHelmValuesFromSource_To_v1alpha1_ConfigMapHelmValuesFromSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ConfigMap = nil
	}
	return nil
}

// Convert_hub_HelmValuesFromSource_To_v1alpha1_HelmValuesFromSource is an autogenerated conversion function.
func Convert_hub_HelmValuesFromSource_To_v1alpha1_HelmValuesFromSource(in *hub.HelmValuesFromSource, out *HelmValuesFromSource, s conversion.Scope) error {
	return autoConvert_hub_HelmValuesFromSource_To_v1alpha1_HelmValuesFromSource(in, out, s)
}

func autoConvert_v1alpha1_Metric_To_hub_Metric(in *Metric, out *hub.Metric, s conversion.Scope) error {
	out.Name = in.Name
	out.Minimize = in.Minimize
	out.Type = hub.MetricType(in.Type)
	out.Query = in.Query
	out.ErrorQuery = in.ErrorQuery
	out.Scheme = in.Scheme
	out.Selector = in.Selector
	out.Port = in.Port
	out.Path = in.Path
	return nil
}

// Convert_v1alpha1_Metric_To_hub_Metric is an autogenerated conversion function.
func Convert_v1alpha1_Metric_To_hub_Metric(in *Metric, out *hub.Metric, s conversion.Scope) error {
	return autoConvert_v1alpha1_Metric_To_hub_Metric(in, out, s)
}

func autoConvert_hub_Metric_To_v1alpha1_Metric(in *hub.Metric, out *Metric, s conversion.Scope) error {
	out.Name = in.Name
	out.Minimize = in.Minimize
	out.Type = MetricType(in.Type)
	out.Query = in.Query
	out.ErrorQuery = in.ErrorQuery
	out.Scheme = in.Scheme
	out.Selector = in.Selector
	out.Port = in.Port
	out.Path = in.Path
	return nil
}

// Convert_hub_Metric_To_v1alpha1_Metric is an autogenerated conversion function.
func Convert_hub_Metric_To_v1alpha1_Metric(in *hub.Metric, out *Metric, s conversion.Scope) error {
	return autoConvert_hub_Metric_To_v1alpha1_Metric(in, out, s)
}

func autoConvert_v1alpha1_NamespaceTemplateSpec_To_hub_NamespaceTemplateSpec(in *NamespaceTemplateSpec, out *hub.NamespaceTemplateSpec, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Spec = in.Spec
	return nil
}

// Convert_v1alpha1_NamespaceTemplateSpec_To_hub_NamespaceTemplateSpec is an autogenerated conversion function.
func Convert_v1alpha1_NamespaceTemplateSpec_To_hub_NamespaceTemplateSpec(in *NamespaceTemplateSpec, out *hub.NamespaceTemplateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_NamespaceTemplateSpec_To_hub_NamespaceTemplateSpec(in, out, s)
}

func autoConvert_hub_NamespaceTemplateSpec_To_v1alpha1_NamespaceTemplateSpec(in *hub.NamespaceTemplateSpec, out *NamespaceTemplateSpec, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Spec = in.Spec
	return nil
}

// Convert_hub_NamespaceTemplateSpec_To_v1alpha1_NamespaceTemplateSpec is an autogenerated conversion function.
func Convert_hub_NamespaceTemplateSpec_To_v1alpha1_NamespaceTemplateSpec(in *hub.NamespaceTemplateSpec, out *NamespaceTemplateSpec, s conversion.Scope) error {
	return autoConvert_hub_NamespaceTemplateSpec_To_v1alpha1_NamespaceTemplateSpec(in, out, s)
}

func autoConvert_v1alpha1_Optimization_To_hub_Optimization(in *Optimization, out *hub.Optimization, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_v1alpha1_Optimization_To_hub_Optimization is an autogenerated conversion function.
func Convert_v1alpha1_Optimization_To_hub_Optimization(in *Optimization, out *hub.Optimization, s conversion.Scope) error {
	return autoConvert_v1alpha1_Optimization_To_hub_Optimization(in, out, s)
}

func autoConvert_hub_Optimization_To_v1alpha1_Optimization(in *hub.Optimization, out *Optimization, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_hub_Optimization_To_v1alpha1_Optimization is an autogenerated conversion function.
func Convert_hub_Optimization_To_v1alpha1_Optimization(in *hub.Optimization, out *Optimization, s conversion.Scope) error {
	return autoConvert_hub_Optimization_To_v1alpha1_Optimization(in, out, s)
}

func autoConvert_v1alpha1_OrderConstraint_To_hub_OrderConstraint(in *OrderConstraint, out *hub.OrderConstraint, s conversion.Scope) error {
	out.LowerParameter = in.LowerParameter
	out.UpperParameter = in.UpperParameter
	return nil
}

// Convert_v1alpha1_OrderConstraint_To_hub_OrderConstraint is an autogenerated conversion function.
func Convert_v1alpha1_OrderConstraint_To_hub_OrderConstraint(in *OrderConstraint, out *hub.OrderConstraint, s conversion.Scope) error {
	return autoConvert_v1alpha1_OrderConstraint_To_hub_OrderConstraint(in, out, s)
}

func autoConvert_hub_OrderConstraint_To_v1alpha1_OrderConstraint(in *hub.OrderConstraint, out *OrderConstraint, s conversion.Scope) error {
	out.LowerParameter = in.LowerParameter
	out.UpperParameter = in.UpperParameter
	return nil
}

// Convert_hub_OrderConstraint_To_v1alpha1_OrderConstraint is an autogenerated conversion function.
func Convert_hub_OrderConstraint_To_v1alpha1_OrderConstraint(in *hub.OrderConstraint, out *OrderConstraint, s conversion.Scope) error {
	return autoConvert_hub_OrderConstraint_To_v1alpha1_OrderConstraint(in, out, s)
}

func autoConvert_v1alpha1_Parameter_To_hub_Parameter(in *Parameter, out *hub.Parameter, s conversion.Scope) error {
	out.Name = in.Name
	out.Min = in.Min
	out.Max = in.Max
	return nil
}

// Convert_v1alpha1_Parameter_To_hub_Parameter is an autogenerated conversion function.
func Convert_v1alpha1_Parameter_To_hub_Parameter(in *Parameter, out *hub.Parameter, s conversion.Scope) error {
	return autoConvert_v1alpha1_Parameter_To_hub_Parameter(in, out, s)
}

func autoConvert_hub_Parameter_To_v1alpha1_Parameter(in *hub.Parameter, out *Parameter, s conversion.Scope) error {
	out.Name = in.Name
	out.Min = in.Min
	out.Max = in.Max
	return nil
}

// Convert_hub_Parameter_To_v1alpha1_Parameter is an autogenerated conversion function.
func Convert_hub_Parameter_To_v1alpha1_Parameter(in *hub.Parameter, out *Parameter, s conversion.Scope) error {
	return autoConvert_hub_Parameter_To_v1alpha1_Parameter(in, out, s)
}

func autoConvert_v1alpha1_ParameterSelector_To_hub_ParameterSelector(in *ParameterSelector, out *hub.ParameterSelector, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_v1alpha1_ParameterSelector_To_hub_ParameterSelector is an autogenerated conversion function.
func Convert_v1alpha1_ParameterSelector_To_hub_ParameterSelector(in *ParameterSelector, out *hub.ParameterSelector, s conversion.Scope) error {
	return autoConvert_v1alpha1_ParameterSelector_To_hub_ParameterSelector(in, out, s)
}

func autoConvert_hub_ParameterSelector_To_v1alpha1_ParameterSelector(in *hub.ParameterSelector, out *ParameterSelector, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_hub_ParameterSelector_To_v1alpha1_ParameterSelector is an autogenerated conversion function.
func Convert_hub_ParameterSelector_To_v1alpha1_ParameterSelector(in *hub.ParameterSelector, out *ParameterSelector, s conversion.Scope) error {
	return autoConvert_hub_ParameterSelector_To_v1alpha1_ParameterSelector(in, out, s)
}

func autoConvert_v1alpha1_PatchOperation_To_hub_PatchOperation(in *PatchOperation, out *hub.PatchOperation, s conversion.Scope) error {
	out.TargetRef = in.TargetRef
	out.PatchType = types.PatchType(in.PatchType)
	if err := conversion.Convert_Slice_byte_To_Slice_byte(&in.Data, &out.Data, s); err != nil {
		return err
	}
	out.AttemptsRemaining = in.AttemptsRemaining
	return nil
}

// Convert_v1alpha1_PatchOperation_To_hub_PatchOperation is an autogenerated conversion function.
func Convert_v1alpha1_PatchOperation_To_hub_PatchOperation(in *PatchOperation, out *hub.PatchOperation, s conversion.Scope) error {
	return autoConvert_v1alpha1_PatchOperation_To_hub_PatchOperation(in, out, s)
}

func autoConvert_hub_PatchOperation_To_v1alpha1_PatchOperation(in *hub.PatchOperation, out *PatchOperation, s conversion.Scope) error {
	out.TargetRef = in.TargetRef
	out.PatchType = types.PatchType(in.PatchType)
	if err := conversion.Convert_Slice_byte_To_Slice_byte(&in.Data, &out.Data, s); err != nil {
		return err
	}
	out.AttemptsRemaining = in.AttemptsRemaining
	return nil
}

// Convert_hub_PatchOperation_To_v1alpha1_PatchOperation is an autogenerated conversion function.
func Convert_hub_PatchOperation_To_v1alpha1_PatchOperation(in *hub.PatchOperation, out *PatchOperation, s conversion.Scope) error {
	return autoConvert_hub_PatchOperation_To_v1alpha1_PatchOperation(in, out, s)
}

func autoConvert_v1alpha1_PatchReadinessGate_To_hub_PatchReadinessGate(in *PatchReadinessGate, out *hub.PatchReadinessGate, s conversion.Scope) error {
	out.ConditionType = in.ConditionType
	return nil
}

// Convert_v1alpha1_PatchReadinessGate_To_hub_PatchReadinessGate is an autogenerated conversion function.
func Convert_v1alpha1_PatchReadinessGate_To_hub_PatchReadinessGate(in *PatchReadinessGate, out *hub.PatchReadinessGate, s conversion.Scope) error {
	return autoConvert_v1alpha1_PatchReadinessGate_To_hub_PatchReadinessGate(in, out, s)
}

func autoConvert_hub_PatchReadinessGate_To_v1alpha1_PatchReadinessGate(in *hub.PatchReadinessGate, out *PatchReadinessGate, s conversion.Scope) error {
	out.ConditionType = in.ConditionType
	return nil
}

// Convert_hub_PatchReadinessGate_To_v1alpha1_PatchReadinessGate is an autogenerated conversion function.
func Convert_hub_PatchReadinessGate_To_v1alpha1_PatchReadinessGate(in *hub.PatchReadinessGate, out *PatchReadinessGate, s conversion.Scope) error {
	return autoConvert_hub_PatchReadinessGate_To_v1alpha1_PatchReadinessGate(in, out, s)
}

func autoConvert_v1alpha1_PatchTemplate_To_hub_PatchTemplate(in *PatchTemplate, out *hub.PatchTemplate, s conversion.Scope) error {
	out.Type = hub.PatchType(in.Type)
	out.Patch = in.Patch
	out.TargetRef = in.TargetRef
	if in.ReadinessGates != nil {
		in, out := &in.ReadinessGates, &out.ReadinessGates
		*out = make([]hub.PatchReadinessGate, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_PatchReadinessGate_To_hub_PatchReadinessGate(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ReadinessGates = nil
	}
	return nil
}

// Convert_v1alpha1_PatchTemplate_To_hub_PatchTemplate is an autogenerated conversion function.
func Convert_v1alpha1_PatchTemplate_To_hub_PatchTemplate(in *PatchTemplate, out *hub.PatchTemplate, s conversion.Scope) error {
	return autoConvert_v1alpha1_PatchTemplate_To_hub_PatchTemplate(in, out, s)
}

func autoConvert_hub_PatchTemplate_To_v1alpha1_PatchTemplate(in *hub.PatchTemplate, out *PatchTemplate, s conversion.Scope) error {
	out.Type = PatchType(in.Type)
	out.Patch = in.Patch
	out.TargetRef = in.TargetRef
	if in.ReadinessGates != nil {
		in, out := &in.ReadinessGates, &out.ReadinessGates
		*out = make([]PatchReadinessGate, len(*in))
		for i := range *in {
			if err := Convert_hub_PatchReadinessGate_To_v1alpha1_PatchReadinessGate(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ReadinessGates = nil
	}
	return nil
}

// Convert_hub_PatchTemplate_To_v1alpha1_PatchTemplate is an autogenerated conversion function.
func Convert_hub_PatchTemplate_To_v1alpha1_PatchTemplate(in *hub.PatchTemplate, out *PatchTemplate, s conversion.Scope) error {
	return autoConvert_hub_PatchTemplate_To_v1alpha1_PatchTemplate(in, out, s)
}

func autoConvert_v1alpha1_ReadinessCheck_To_hub_ReadinessCheck(in *ReadinessCheck, out *hub.ReadinessCheck, s conversion.Scope) error {
	out.TargetRef = in.TargetRef
	out.Selector = in.Selector
	out.ConditionTypes = in.ConditionTypes
	out.InitialDelaySeconds = in.InitialDelaySeconds
	out.PeriodSeconds = in.PeriodSeconds
	out.AttemptsRemaining = in.AttemptsRemaining
	out.LastCheckTime = in.LastCheckTime
	return nil
}

// Convert_v1alpha1_ReadinessCheck_To_hub_ReadinessCheck is an autogenerated conversion function.
func Convert_v1alpha1_ReadinessCheck_To_hub_ReadinessCheck(in *ReadinessCheck, out *hub.ReadinessCheck, s conversion.Scope) error {
	return autoConvert_v1alpha1_ReadinessCheck_To_hub_ReadinessCheck(in, out, s)
}

func autoConvert_hub_ReadinessCheck_To_v1alpha1_ReadinessCheck(in *hub.ReadinessCheck, out *ReadinessCheck, s conversion.Scope) error {
	out.TargetRef = in.TargetRef
	out.Selector = in.Selector
	out.ConditionTypes = in.ConditionTypes
	out.InitialDelaySeconds = in.InitialDelaySeconds
	out.PeriodSeconds = in.PeriodSeconds
	out.AttemptsRemaining = in.AttemptsRemaining
	out.LastCheckTime = in.LastCheckTime
	return nil
}

// Convert_hub_ReadinessCheck_To_v1alpha1_ReadinessCheck is an autogenerated conversion function.
func Convert_hub_ReadinessCheck_To_v1alpha1_ReadinessCheck(in *hub.ReadinessCheck, out *ReadinessCheck, s conversion.Scope) error {
	return autoConvert_hub_ReadinessCheck_To_v1alpha1_ReadinessCheck(in, out, s)
}

func autoConvert_v1alpha1_SetupTask_To_hub_SetupTask(in *SetupTask, out *hub.SetupTask, s conversion.Scope) error {
	out.Name = in.Name
	out.Image = in.Image
	out.SkipCreate = in.SkipCreate
	out.SkipDelete = in.SkipDelete
	out.VolumeMounts = in.VolumeMounts
	out.HelmChart = in.HelmChart
	out.HelmChartVersion = in.HelmChartVersion
	if in.HelmValues != nil {
		in, out := &in.HelmValues, &out.HelmValues
		*out = make([]hub.HelmValue, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_HelmValue_To_hub_HelmValue(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.HelmValues = nil
	}
	if in.HelmValuesFrom != nil {
		in, out := &in.HelmValuesFrom, &out.HelmValuesFrom
		*out = make([]hub.HelmValuesFromSource, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_HelmValuesFromSource_To_hub_HelmValuesFromSource(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.HelmValuesFrom = nil
	}
	return nil
}

// Convert_v1alpha1_SetupTask_To_hub_SetupTask is an autogenerated conversion function.
func Convert_v1alpha1_SetupTask_To_hub_SetupTask(in *SetupTask, out *hub.SetupTask, s conversion.Scope) error {
	return autoConvert_v1alpha1_SetupTask_To_hub_SetupTask(in, out, s)
}

func autoConvert_hub_SetupTask_To_v1alpha1_SetupTask(in *hub.SetupTask, out *SetupTask, s conversion.Scope) error {
	out.Name = in.Name
	out.Image = in.Image
	out.SkipCreate = in.SkipCreate
	out.SkipDelete = in.SkipDelete
	out.VolumeMounts = in.VolumeMounts
	out.HelmChart = in.HelmChart
	out.HelmChartVersion = in.HelmChartVersion
	if in.HelmValues != nil {
		in, out := &in.HelmValues, &out.HelmValues
		*out = make([]HelmValue, len(*in))
		for i := range *in {
			if err := Convert_hub_HelmValue_To_v1alpha1_HelmValue(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.HelmValues = nil
	}
	if in.HelmValuesFrom != nil {
		in, out := &in.HelmValuesFrom, &out.HelmValuesFrom
		*out = make([]HelmValuesFromSource, len(*in))
		for i := range *in {
			if err := Convert_hub_HelmValuesFromSource_To_v1alpha1_HelmValuesFromSource(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.HelmValuesFrom = nil
	}
	return nil
}

// Convert_hub_SetupTask_To_v1alpha1_SetupTask is an autogenerated conversion function.
func Convert_hub_SetupTask_To_v1alpha1_SetupTask(in *hub.SetupTask, out *SetupTask, s conversion.Scope) error {
	return autoConvert_hub_SetupTask_To_v1alpha1_SetupTask(in, out, s)
}

func autoConvert_v1alpha1_SumConstraint_To_hub_SumConstraint(in *SumConstraint, out *hub.SumConstraint, s conversion.Scope) error {
	out.Bound = in.Bound
	out.IsUpperBound = in.IsUpperBound
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]hub.SumConstraintParameter, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_SumConstraintParameter_To_hub_SumConstraintParameter(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Parameters = nil
	}
	return nil
}

// Convert_v1alpha1_SumConstraint_To_hub_SumConstraint is an autogenerated conversion function.
func Convert_v1alpha1_SumConstraint_To_hub_SumConstraint(in *SumConstraint, out *hub.SumConstraint, s conversion.Scope) error {
	return autoConvert_v1alpha1_SumConstraint_To_hub_SumConstraint(in, out, s)
}

func autoConvert_hub_SumConstraint_To_v1alpha1_SumConstraint(in *hub.SumConstraint, out *SumConstraint, s conversion.Scope) error {
	out.Bound = in.Bound
	out.IsUpperBound = in.IsUpperBound
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]SumConstraintParameter, len(*in))
		for i := range *in {
			if err := Convert_hub_SumConstraintParameter_To_v1alpha1_SumConstraintParameter(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Parameters = nil
	}
	return nil
}

// Convert_hub_SumConstraint_To_v1alpha1_SumConstraint is an autogenerated conversion function.
func Convert_hub_SumConstraint_To_v1alpha1_SumConstraint(in *hub.SumConstraint, out *SumConstraint, s conversion.Scope) error {
	return autoConvert_hub_SumConstraint_To_v1alpha1_SumConstraint(in, out, s)
}

func autoConvert_v1alpha1_SumConstraintParameter_To_hub_SumConstraintParameter(in *SumConstraintParameter, out *hub.SumConstraintParameter, s conversion.Scope) error {
	out.Name = in.Name
	out.Weight = in.Weight
	return nil
}

// Convert_v1alpha1_SumConstraintParameter_To_hub_SumConstraintParameter is an autogenerated conversion function.
func Convert_v1alpha1_SumConstraintParameter_To_hub_SumConstraintParameter(in *SumConstraintParameter, out *hub.SumConstraintParameter, s conversion.Scope) error {
	return autoConvert_v1alpha1_SumConstraintParameter_To_hub_SumConstraintParameter(in, out, s)
}

func autoConvert_hub_SumConstraintParameter_To_v1alpha1_SumConstraintParameter(in *hub.SumConstraintParameter, out *SumConstraintParameter, s conversion.Scope) error {
	out.Name = in.Name
	out.Weight = in.Weight
	return nil
}

// Convert_hub_SumConstraintParameter_To_v1alpha1_SumConstraintParameter is an autogenerated conversion function.
func Convert_hub_SumConstraintParameter_To_v1alpha1_SumConstraintParameter(in *hub.SumConstraintParameter, out *SumConstraintParameter, s conversion.Scope) error {
	return autoConvert_hub_SumConstraintParameter_To_v1alpha1_SumConstraintParameter(in, out, s)
}

func autoConvert_v1alpha1_Trial_To_hub_Trial(in *Trial, out *hub.Trial, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_TrialSpec_To_hub_TrialSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_TrialStatus_To_hub_TrialStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Trial_To_hub_Trial is an autogenerated conversion function.
func Convert_v1alpha1_Trial_To_hub_Trial(in *Trial, out *hub.Trial, s conversion.Scope) error {
	return autoConvert_v1alpha1_Trial_To_hub_Trial(in, out, s)
}

func autoConvert_hub_Trial_To_v1alpha1_Trial(in *hub.Trial, out *Trial, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_hub_TrialSpec_To_v1alpha1_TrialSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_hub_TrialStatus_To_v1alpha1_TrialStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_hub_Trial_To_v1alpha1_Trial is an autogenerated conversion function.
func Convert_hub_Trial_To_v1alpha1_Trial(in *hub.Trial, out *Trial, s conversion.Scope) error {
	return autoConvert_hub_Trial_To_v1alpha1_Trial(in, out, s)
}

func autoConvert_v1alpha1_TrialCondition_To_hub_TrialCondition(in *TrialCondition, out *hub.TrialCondition, s conversion.Scope) error {
	out.Type = hub.TrialConditionType(in.Type)
	out.Status = v1.ConditionStatus(in.Status)
	out.LastProbeTime = in.LastProbeTime
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_v1alpha1_TrialCondition_To_hub_TrialCondition is an autogenerated conversion function.
func Convert_v1alpha1_TrialCondition_To_hub_TrialCondition(in *TrialCondition, out *hub.TrialCondition, s conversion.Scope) error {
	return autoConvert_v1alpha1_TrialCondition_To_hub_TrialCondition(in, out, s)
}

func autoConvert_hub_TrialCondition_To_v1alpha1_TrialCondition(in *hub.TrialCondition, out *TrialCondition, s conversion.Scope) error {
	out.Type = TrialConditionType(in.Type)
	out.Status = v1.ConditionStatus(in.Status)
	out.LastProbeTime = in.LastProbeTime
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_hub_TrialCondition_To_v1alpha1_TrialCondition is an autogenerated conversion function.
func Convert_hub_TrialCondition_To_v1alpha1_TrialCondition(in *hub.TrialCondition, out *TrialCondition, s conversion.Scope) error {
	return autoConvert_hub_TrialCondition_To_v1alpha1_TrialCondition(in, out, s)
}

func autoConvert_v1alpha1_TrialList_To_hub_TrialList(in *TrialList, out *hub.TrialList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]hub.Trial, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Trial_To_hub_Trial(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_TrialList_To_hub_TrialList is an autogenerated conversion function.
func Convert_v1alpha1_TrialList_To_hub_TrialList(in *TrialList, out *hub.TrialList, s conversion.Scope) error {
	return autoConvert_v1alpha1_TrialList_To_hub_TrialList(in, out, s)
}

func autoConvert_hub_TrialList_To_v1alpha1_TrialList(in *hub.TrialList, out *TrialList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Trial, len(*in))
		for i := range *in {
			if err := Convert_hub_Trial_To_v1alpha1_Trial(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_hub_TrialList_To_v1alpha1_TrialList is an autogenerated conversion function.
func Convert_hub_TrialList_To_v1alpha1_TrialList(in *hub.TrialList, out *TrialList, s conversion.Scope) error {
	return autoConvert_hub_TrialList_To_v1alpha1_TrialList(in, out, s)
}

func autoConvert_v1alpha1_TrialReadinessGate_To_hub_TrialReadinessGate(in *TrialReadinessGate, out *hub.TrialReadinessGate, s conversion.Scope) error {
	out.Kind = in.Kind
	out.Name = in.Name
	out.APIVersion = in.APIVersion
	out.Selector = in.Selector
	out.ConditionTypes = in.ConditionTypes
	out.InitialDelaySeconds = in.InitialDelaySeconds
	out.PeriodSeconds = in.PeriodSeconds
	out.FailureThreshold = in.FailureThreshold
	return nil
}

// Convert_v1alpha1_TrialReadinessGate_To_hub_TrialReadinessGate is an autogenerated conversion function.
func Convert_v1alpha1_TrialReadinessGate_To_hub_TrialReadinessGate(in *TrialReadinessGate, out *hub.TrialReadinessGate, s conversion.Scope) error {
	return autoConvert_v1alpha1_TrialReadinessGate_To_hub_TrialReadinessGate(in, out, s)
}

func autoConvert_hub_TrialReadinessGate_To_v1alpha1_TrialReadinessGate(in *hub.TrialReadinessGate, out *TrialReadinessGate, s conversion.Scope) error {
	out.Kind = in.Kind
	out.Name = in.Name
	out.APIVersion = in.APIVersion
	out.Selector = in.Selector
	out.ConditionTypes = in.ConditionTypes
	out.InitialDelaySeconds = in.InitialDelaySeconds
	out.PeriodSeconds = in.PeriodSeconds
	out.FailureThreshold = in.FailureThreshold
	return nil
}

// Convert_hub_TrialReadinessGate_To_v1alpha1_TrialReadinessGate is an autogenerated conversion function.
func Convert_hub_TrialReadinessGate_To_v1alpha1_TrialReadinessGate(in *hub.TrialReadinessGate, out *TrialReadinessGate, s conversion.Scope) error {
	return autoConvert_hub_TrialReadinessGate_To_v1alpha1_TrialReadinessGate(in, out, s)
}

func autoConvert_v1alpha1_TrialSpec_To_hub_TrialSpec(in *TrialSpec, out *hub.TrialSpec, s conversion.Scope) error {
	out.ExperimentRef = in.ExperimentRef
	if in.Assignments != nil {
		in, out := &in.Assignments, &out.Assignments
		*out = make([]hub.Assignment, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Assignment_To_hub_Assignment(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Assignments = nil
	}
	out.Selector = in.Selector
	out.Template = in.Template
	out.InitialDelaySeconds = in.InitialDelaySeconds
	out.StartTimeOffset = in.StartTimeOffset
	out.ApproximateRuntime = in.ApproximateRuntime
	out.TTLSecondsAfterFinished = in.TTLSecondsAfterFinished
	out.TTLSecondsAfterFailure = in.TTLSecondsAfterFailure
	if in.ReadinessGates != nil {
		in, out := &in.ReadinessGates, &out.ReadinessGates
		*out = make([]hub.TrialReadinessGate, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_TrialReadinessGate_To_hub_TrialReadinessGate(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ReadinessGates = nil
	}
	if in.PatchOperations != nil {
		in, out := &in.PatchOperations, &out.PatchOperations
		*out = make([]hub.PatchOperation, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_PatchOperation_To_hub_PatchOperation(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.PatchOperations = nil
	}
	if in.ReadinessChecks != nil {
		in, out := &in.ReadinessChecks, &out.ReadinessChecks
		*out = make([]hub.ReadinessCheck, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_ReadinessCheck_To_hub_ReadinessCheck(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ReadinessChecks = nil
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]hub.Value, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Value_To_hub_Value(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Values = nil
	}
	if in.SetupTasks != nil {
		in, out := &in.SetupTasks, &out.SetupTasks
		*out = make([]hub.SetupTask, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_SetupTask_To_hub_SetupTask(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.SetupTasks = nil
	}
	out.SetupVolumes = in.SetupVolumes
	out.SetupServiceAccountName = in.SetupServiceAccountName
	out.SetupDefaultClusterRole = in.SetupDefaultClusterRole
	out.SetupDefaultRules = in.SetupDefaultRules
	return nil
}

// Convert_v1alpha1_TrialSpec_To_hub_TrialSpec is an autogenerated conversion function.
func Convert_v1alpha1_TrialSpec_To_hub_TrialSpec(in *TrialSpec, out *hub.TrialSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_TrialSpec_To_hub_TrialSpec(in, out, s)
}

func autoConvert_hub_TrialSpec_To_v1alpha1_TrialSpec(in *hub.TrialSpec, out *TrialSpec, s conversion.Scope) error {
	out.ExperimentRef = in.ExperimentRef
	if in.Assignments != nil {
		in, out := &in.Assignments, &out.Assignments
		*out = make([]Assignment, len(*in))
		for i := range *in {
			if err := Convert_hub_Assignment_To_v1alpha1_Assignment(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Assignments = nil
	}
	out.Selector = in.Selector
	out.Template = in.Template
	out.InitialDelaySeconds = in.InitialDelaySeconds
	out.StartTimeOffset = in.StartTimeOffset
	out.ApproximateRuntime = in.ApproximateRuntime
	out.TTLSecondsAfterFinished = in.TTLSecondsAfterFinished
	out.TTLSecondsAfterFailure = in.TTLSecondsAfterFailure
	if in.ReadinessGates != nil {
		in, out := &in.ReadinessGates, &out.ReadinessGates
		*out = make([]TrialReadinessGate, len(*in))
		for i := range *in {
			if err := Convert_hub_TrialReadinessGate_To_v1alpha1_TrialReadinessGate(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ReadinessGates = nil
	}
	if in.PatchOperations != nil {
		in, out := &in.PatchOperations, &out.PatchOperations
		*out = make([]PatchOperation, len(*in))
		for i := range *in {
			if err := Convert_hub_PatchOperation_To_v1alpha1_PatchOperation(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.PatchOperations = nil
	}
	if in.ReadinessChecks != nil {
		in, out := &in.ReadinessChecks, &out.ReadinessChecks
		*out = make([]ReadinessCheck, len(*in))
		for i := range *in {
			if err := Convert_hub_ReadinessCheck_To_v1alpha1_ReadinessCheck(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ReadinessChecks = nil
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]Value, len(*in))
		for i := range *in {
			if err := Convert_hub_Value_To_v1alpha1_Value(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Values = nil
	}
	if in.SetupTasks != nil {
		in, out := &in.SetupTasks, &out.SetupTasks
		*out = make([]SetupTask, len(*in))
		for i := range *in {
			if err := Convert_hub_SetupTask_To_v1alpha1_SetupTask(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.SetupTasks = nil
	}
	out.SetupVolumes = in.SetupVolumes
	out.SetupServiceAccountName = in.SetupServiceAccountName
	out.SetupDefaultClusterRole = in.SetupDefaultClusterRole
	out.SetupDefaultRules = in.SetupDefaultRules
	return nil
}

// Convert_hub_TrialSpec_To_v1alpha1_TrialSpec is an autogenerated conversion function.
func Convert_hub_TrialSpec_To_v1alpha1_TrialSpec(in *hub.TrialSpec, out *TrialSpec, s conversion.Scope) error {
	return autoConvert_hub_TrialSpec_To_v1alpha1_TrialSpec(in, out, s)
}

func autoConvert_v1alpha1_TrialStatus_To_hub_TrialStatus(in *TrialStatus, out *hub.TrialStatus, s conversion.Scope) error {
	out.Phase = in.Phase
	out.Assignments = in.Assignments
	out.Values = in.Values
	out.StartTime = in.StartTime
	out.CompletionTime = in.CompletionTime
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]hub.TrialCondition, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_TrialCondition_To_hub_TrialCondition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Conditions = nil
	}
	return nil
}

// Convert_v1alpha1_TrialStatus_To_hub_TrialStatus is an autogenerated conversion function.
func Convert_v1alpha1_TrialStatus_To_hub_TrialStatus(in *TrialStatus, out *hub.TrialStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_TrialStatus_To_hub_TrialStatus(in, out, s)
}

func autoConvert_hub_TrialStatus_To_v1alpha1_TrialStatus(in *hub.TrialStatus, out *TrialStatus, s conversion.Scope) error {
	out.Phase = in.Phase
	out.Assignments = in.Assignments
	out.Values = in.Values
	out.StartTime = in.StartTime
	out.CompletionTime = in.CompletionTime
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]TrialCondition, len(*in))
		for i := range *in {
			if err := Convert_hub_TrialCondition_To_v1alpha1_TrialCondition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Conditions = nil
	}
	return nil
}

// Convert_hub_TrialStatus_To_v1alpha1_TrialStatus is an autogenerated conversion function.
func Convert_hub_TrialStatus_To_v1alpha1_TrialStatus(in *hub.TrialStatus, out *TrialStatus, s conversion.Scope) error {
	return autoConvert_hub_TrialStatus_To_v1alpha1_TrialStatus(in, out, s)
}

func autoConvert_v1alpha1_TrialTemplateSpec_To_hub_TrialTemplateSpec(in *TrialTemplateSpec, out *hub.TrialTemplateSpec, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_TrialSpec_To_hub_TrialSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_TrialTemplateSpec_To_hub_TrialTemplateSpec is an autogenerated conversion function.
func Convert_v1alpha1_TrialTemplateSpec_To_hub_TrialTemplateSpec(in *TrialTemplateSpec, out *hub.TrialTemplateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_TrialTemplateSpec_To_hub_TrialTemplateSpec(in, out, s)
}

func autoConvert_hub_TrialTemplateSpec_To_v1alpha1_TrialTemplateSpec(in *hub.TrialTemplateSpec, out *TrialTemplateSpec, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_hub_TrialSpec_To_v1alpha1_TrialSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_hub_TrialTemplateSpec_To_v1alpha1_TrialTemplateSpec is an autogenerated conversion function.
func Convert_hub_TrialTemplateSpec_To_v1alpha1_TrialTemplateSpec(in *hub.TrialTemplateSpec, out *TrialTemplateSpec, s conversion.Scope) error {
	return autoConvert_hub_TrialTemplateSpec_To_v1alpha1_TrialTemplateSpec(in, out, s)
}

func autoConvert_v1alpha1_Value_To_hub_Value(in *Value, out *hub.Value, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	out.Error = in.Error
	out.AttemptsRemaining = in.AttemptsRemaining
	return nil
}

// Convert_v1alpha1_Value_To_hub_Value is an autogenerated conversion function.
func Convert_v1alpha1_Value_To_hub_Value(in *Value, out *hub.Value, s conversion.Scope) error {
	return autoConvert_v1alpha1_Value_To_hub_Value(in, out, s)
}

func autoConvert_hub_Value_To_v1alpha1_Value(in *hub.Value, out *Value, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	out.Error = in.Error
	out.AttemptsRemaining = in.AttemptsRemaining
	return nil
}

// Convert_hub_Value_To_v1alpha1_Value is an autogenerated conversion function.
func Convert_hub_Value_To_v1alpha1_Value(in *hub.Value, out *Value, s conversion.Scope) error {
	return autoConvert_hub_Value_To_v1alpha1_Value(in, out, s)
}
