---
# Source: prometheus/templates/configmaps/server.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: prometheus
  name: prometheus-server
data:
  alerting_rules.yml: |
    {}
  alerts: |
    {}
  prometheus.yml: |
    global:
      scrape_interval: 5s
      scrape_timeout: 3s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/rules
    scrape_configs:
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      # Drop labels we dont care about
      metric_relabel_configs:
      - regex: beta_kubernetes_io_arch
        action: labeldrop
      - regex: kubernetes_io_arch
        action: labeldrop
      - regex: beta_kubernetes_io_os
        action: labeldrop
      - regex: kubernetes_io_os
        action: labeldrop
      - regex: job
        action: labeldrop
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - job_name: kube-state-metrics
      scheme: http
      static_configs:
      - targets:
        - kube-state-metrics:8080

#    - job_name: kubernetes-service-endpoints
#      kubernetes_sd_configs:
#      - role: endpoints
#      relabel_configs:
#      - action: keep
#        regex: true
#        source_labels:
#        - __meta_kubernetes_service_annotation_prometheus_io_scrape
#      - action: replace
#        regex: (https?)
#        source_labels:
#        - __meta_kubernetes_service_annotation_prometheus_io_scheme
#        target_label: __scheme__
#      - action: replace
#        regex: (.+)
#        source_labels:
#        - __meta_kubernetes_service_annotation_prometheus_io_path
#        target_label: __metrics_path__
#      - action: replace
#        regex: ([^:]+)(?::\d+)?;(\d+)
#        replacement: $1:$2
#        source_labels:
#        - __address__
#        - __meta_kubernetes_service_annotation_prometheus_io_port
#        target_label: __address__
#      - action: labelmap
#        regex: __meta_kubernetes_service_label_(.+)
#      - action: replace
#        source_labels:
#        - __meta_kubernetes_namespace
#        target_label: kubernetes_namespace
#      - action: replace
#        source_labels:
#        - __meta_kubernetes_service_name
#        target_label: kubernetes_name
#      - action: replace
#        source_labels:
#        - __meta_kubernetes_pod_node_name
#        target_label: kubernetes_node
#    - job_name: kubernetes-services
#      kubernetes_sd_configs:
#      - role: service
#      metrics_path: /probe
#      params:
#        module:
#        - http_2xx
#      relabel_configs:
#      - action: keep
#        regex: true
#        source_labels:
#        - __meta_kubernetes_service_annotation_prometheus_io_probe
#      - source_labels:
#        - __address__
#        target_label: __param_target
#      - replacement: blackbox
#        target_label: __address__
#      - source_labels:
#        - __param_target
#        target_label: instance
#      - action: labelmap
#        regex: __meta_kubernetes_service_label_(.+)
#      - source_labels:
#        - __meta_kubernetes_namespace
#        target_label: kubernetes_namespace
#      - source_labels:
#        - __meta_kubernetes_service_name
#        target_label: kubernetes_name
  recording_rules.yml: |
    {}
  rules: |
    {}
