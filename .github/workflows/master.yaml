name: Main workflow
on:
  push:
    branches:
      - master
    tags:
      - v*
jobs:
  build:
    name: Build and Deploy
    runs-on: macos-latest
    env:
      BUILD_METADATA: build.${{ github.run_number }}
      GIT_COMMIT: ${{ github.sha }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: Install minikube
        id: install-minikube
        run: |
          brew install minikube hyperkit docker
          echo "cache-key=$(minikube version | md5)" >> $GITHUB_ENV
      - name: Cache minikube
        uses: actions/cache@v2
        with:
          path: |
            ~/.minikube/cache
            ~/.minikube/bin
          key: ${{ runner.os }}-minikube-${{ steps.install-minikube.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-minikube-
      - name: Start minikube
        run: |
          minikube start --wait all
          minikube docker-env | sed '/^#/d;s/="\(.*\)"/=\1/g;s/export //g' >> $GITHUB_ENV
      - name: Cache Go Modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cache Go Cache
        uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-gobuildcache-${{ hashFiles('**.go') }}
          restore-keys: |
            ${{ runner.os }}-gobuildcache-
      - name: Set up Google Cloud Platform
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        with:
          service_account_email: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
          project_id: redskyops
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v2
        env:
          GPG_PRIVATE_KEY: ${{ secrets.BMASTERS_PRIVATE_KEY }}
      - name: Bootstrap
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          if [ -z "${GITHUB_REF/refs\/tags\/*/}" ]; then
            TAG=${GITHUB_REF##*/v}
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
            echo "VERSION=v${TAG}" >> $GITHUB_ENV
            echo "IMG=redskyops/redskyops-controller:${TAG}" >> $GITHUB_ENV
            echo "REDSKYCTL_IMG=redskyops/redskyctl:${TAG}" >> $GITHUB_ENV
            echo "SETUPTOOLS_IMG=redskyops/setuptools:${TAG}" >> $GITHUB_ENV
            echo "AC_USERNAME=${{ secrets.AC_USERNAME }}" >> $GITHUB_ENV
            printenv DOCKER_PASSWORD | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          else
            TAG="sha-$(git rev-parse --short HEAD)"
            echo "DOCKER_TAG=canary"  >> $GITHUB_ENV # TODO This should change to "latest" after the 1.6.0 release
            echo "IMG=gcr.io/redskyops/redskyops-controller:${TAG}" >> $GITHUB_ENV
            echo "REDSKYCTL_IMG=gcr.io/redskyops/redskyctl:${TAG}" >> $GITHUB_ENV
            echo "SETUPTOOLS_IMG=gcr.io/redskyops/setuptools:${TAG}" >> $GITHUB_ENV
            gcloud --quiet auth configure-docker
          fi
          echo "PULL_POLICY=" >> $GITHUB_ENV
      - name: Build controller
        run: |
          make docker-build-ci
      - name: Build tool
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist --release-notes hack/changelog.md.txt
        env:
          GITHUB_TOKEN: ${{ secrets.BMASTERS_TOKEN }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
          AC_IDENTITY_P12: ${{ secrets.AC_IDENTITY_P12 }}
      - name: Push Docker images
        run: |
          docker tag "${IMG}" "${IMG%%:*}:${DOCKER_TAG}"
          docker tag "${REDSKYCTL_IMG}" "${REDSKYCTL_IMG%%:*}:${DOCKER_TAG}"
          docker tag "${SETUPTOOLS_IMG}" "${SETUPTOOLS_IMG%%:*}:${DOCKER_TAG}"
          make docker-push
          docker push "${IMG%%:*}:${DOCKER_TAG}"
          docker push "${REDSKYCTL_IMG%%:*}:${DOCKER_TAG}"
          docker push "${SETUPTOOLS_IMG%%:*}:${DOCKER_TAG}"
      - name: Upload macOS binary
        uses: actions/upload-artifact@v1
        with:
          name: redskyctl_darwin_amd64
          path: dist/redskyctl-darwin-amd64.tar.gz
      - name: Upload Linux binary
        uses: actions/upload-artifact@v1
        with:
          name: redskyctl_linux_amd64
          path: dist/redskyctl-linux-amd64.tar.gz
